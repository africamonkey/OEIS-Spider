{
    "number": 82763,
    "data": "40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,140,141,142,143,144,145,146,147,148,149,150,151,152",
    "name": "Roman numeral contains an asymmetric symbol (L).",
    "comment": [
        "I,V,X,C,D,M - and even the vinculum (bar) and apostrophus (backwards \"C\") - are each symmetric: horizontally, vertically, or both.",
        "Numbers containing a 4 when decimally encoded with A061493. - _Reinhard Zumkeller_, Apr 14 2013"
    ],
    "link": [
        "Nathaniel Johnston, <a href=\"/A082763/b082763.txt\">Table of n, a(n) for n = 1..2000</a> (complete up to 3999)",
        "Gerard Schildberger, <a href=\"/A006968/a006968.txt\">The first 3999 numbers in Roman numerals</a>",
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/RomanNumeral.html\">Roman Numeral.</a>"
    ],
    "formula": [
        "a(n+50) = a(n) + 100 for n >= 1 [a(n+L) = a(n) + C for n >= I], a(1) = 40 [a(I) = XL], a(n+1) = a(n) + 1 for 1 <= n <= 49 [a(n+I) = a(n) + I for I <= n <= XLIX]; so a(n) = floor((n-1)/50)*100 + 40 + ((n-1)(mod 50)) for n >= 1 [a(n) = floor((n-I)/L)*C + XL + ((n-I)(mod L)) for n >= I]."
    ],
    "example": [
        "40 = XL, 89 = LXXXIX, 140 = CXL."
    ],
    "maple": [
        "with(StringTools): for n from 1 to 152 do if(Search(\"L\", convert(n, roman)) > 0)then printf(\"%d, \", n): fi: od: # _Nathaniel Johnston_, May 18 2011"
    ],
    "program": [
        "(PARI) /* \"%\" use below is actually identical to lift(Mod(n-1,50)) */ /* (n-1)<backslash>50 could be used for integer division below */ /* instead of floor, but the OEIS sometimes loses <backslash> */ /* characters depending upon where on a submitted line they are. */ a(n)=floor((n-1)/50)*100+40+(n-1)%50 for(n=1,125,print1(a(n),\",\"))",
        "(Haskell)",
        "a082763 n = a082763_list !! (n-1)",
        "a082763_list = filter (containsL . a061493) [1..3999] where",
        "   containsL x = d == 4 || x > 0 && containsL x' where",
        "                 (x',d) = divMod x 10",
        "-- _Reinhard Zumkeller_, Apr 14 2013"
    ],
    "xref": [
        "Cf. A006968 (Roman numerals main entry), A078715 (Palindromic Roman numerals)."
    ],
    "keyword": "base,easy,nonn",
    "offset": "1,1",
    "author": "_Rick L. Shepherd_, May 21 2003",
    "references": 1,
    "revision": 17,
    "time": "2017-08-13T20:34:30-04:00",
    "created": "2003-09-13T03:00:00-04:00"
}