{
    "number": 269926,
    "data": "1,4,33,385,11483,305684",
    "name": "Number of partitions of n into rational parts a/b such that 1<=a,b<=n and gcd(a,b)=1.",
    "comment": [
        "A018805 is the number of rational parts a/b, such that 1<=a,b<=n and gcd(a,b)=1."
    ],
    "example": [
        "For n=2, the rational parts a/b, such that 1<=a,b<= n and gcd(a,b)=1, are: { 1/1, 1/2, 2/1 }. a(2)=4 because 2 can be partitioned into the following 4 partitions: { 1/2, 1/2, 1/2, 1/2 }, { 1/1, 1/2, 1/2 }, { 1/1, 1/1 }, { 2/1 }."
    ],
    "program": [
        "(Sage)",
        "from itertools import combinations_with_replacement",
        "seq = []",
        "for n in xrange( 1, 5 ):",
        "....rationals = set()",
        "....for a in xrange( 1, n+1 ):",
        "........for b in xrange( 1, n+1 ):",
        "............rational = Rational( (a, b) )",
        "............rationals.add( rational )",
        "....partition_count = 0",
        "....for r in xrange( 1, n^2 + 1 ):",
        "........for partition in combinations_with_replacement( rationals, r ):",
        "............if sum( partition ) == n:",
        "................partition_count += 1",
        "....seq.append( partition_count )",
        "print seq",
        "(Sage)# Faster version",
        "def count_combinations( n, values, r ):",
        "....combo = [ None ] * r",
        "....level = 0",
        "....min_index = 0",
        "....count = 0",
        "....return get_count( n, values, r, combo, level, min_index, count )",
        "def get_count( n, values, r, combo, level, min_index, count ):",
        "....if level < r:",
        "........for i in xrange( min_index, len( values ) ):",
        "............combo[level] = values[i]",
        "............if sum( combo[0:level] ) < n:",
        "................count = get_count( n, values, r, combo, level+1, i, count )",
        "....else:",
        "........if sum( combo ) == n:",
        "............count += 1",
        "....return count",
        "seq = []",
        "for n in xrange( 1, 5 ):",
        "....rational_set = set()",
        "....for a in xrange( 1, n+1 ):",
        "........for b in xrange( 1, n+1 ):",
        "............rational = Rational( (a, b) )",
        "............rational_set.add( rational )",
        "....rationals = sorted( list( rational_set ) )",
        "....partition_count = 0",
        "....for r in xrange( 1, n^2 + 1 ):",
        "........partition_count += count_combinations( n, rationals, r )",
        "....seq.append( partition_count )",
        "print seq"
    ],
    "xref": [
        "Cf. A018805, A209489."
    ],
    "keyword": "nonn,more",
    "offset": "1,2",
    "author": "_Robert C. Lyons_, Mar 07 2016",
    "references": 0,
    "revision": 25,
    "time": "2016-04-03T10:25:14-04:00",
    "created": "2016-04-03T10:25:14-04:00"
}