{
    "number": 123580,
    "data": "0,1,2,3,4,4,5,6,7,7,8,9,9,10,10,10,11,12,13,13,14,15,15,16,16,16,17,18,18,19,19,19,20,20,20,20,21,22,23,23,24,25,25,26,26,26,27,28,28,29,29,29,30,30,30,30,31,32,32,33,33,33,34,34,34,34,35,35,35,35,35,36,37,38",
    "name": "The Kruskal-Macaulay function M_4(n).",
    "comment": [
        "Write n (uniquely) as n = C(n_t,t) + C(n_{t-1},t-1) + ... + C(n_v,v) where n_t > n_{t-1} > ... > n_v >= v >= 1. Then M_t(n) = C(n_t-1,t-1) + C(n_{t-1}-1,t-2) + ... + C(n_v-1,v-1)."
    ],
    "reference": [
        "D. E. Knuth, The Art of Computer Programming, Vol. 4, Fascicle 3, Section 7.2.1.3, Table 3."
    ],
    "link": [
        "B. M. Abrego, S. Fernandez-Merchant, B. Llano, <a href=\"https://cs.uwaterloo.ca/journals/JIS/VOL14/Abrego/abrego2.html\">An Inequality for Macaulay Functions</a>, J. Int. Seq. 14 (2011) # 11.7.4"
    ],
    "maple": [
        "lowpol := proc(n,t) local x::integer; x := floor( (n*factorial(t))^(1/t)); while binomial(x,t) <= n do x := x+1; od; RETURN(x-1); end: C := proc(n,t) local nresid,tresid,m,a; nresid := n; tresid := t; a := []; while nresid > 0 do m := lowpol(nresid,tresid); a := [op(a),m]; nresid := nresid - binomial(m,tresid); tresid := tresid-1; od; RETURN(a); end: M := proc(n,t) local a; a := C(n,t); add( binomial(op(i,a)-1,t-i),i=1..nops(a)); end: A123580 := proc(n) M(n,4); end: for n from 0 to 120 do printf(\"%d, \",A123580(n)); od; # _R. J. Mathar_, Mar 14 2007"
    ],
    "xref": [
        "For M_i(n), i=1, 2, 3, 4, 5 see A000127, A123578, A123579, A123580, A123731."
    ],
    "keyword": "nonn,easy",
    "offset": "0,3",
    "author": "_N. J. A. Sloane_, Nov 12 2006",
    "references": 4,
    "revision": 12,
    "time": "2017-09-02T14:17:40-04:00",
    "created": "2006-12-06T03:00:00-05:00"
}