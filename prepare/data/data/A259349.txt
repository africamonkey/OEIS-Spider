{
    "number": 259349,
    "data": "1990586014,1994837494,2129658986,2341714794,2428906514,2963553594,3297066410,3353808094,3373085990,3623442746,3659230730,3809238770,3967387346,4058711734,4144727994,4196154390,4502893746,4555267690,4653623534",
    "name": "Numbers n such that n-1, n, and n+1 are all products of 6 distinct primes.",
    "comment": [
        "A subsequence of A169834.",
        "The rudimentary method employed by the below PARI program reaches the limit of its usefulness here. Contrast it with the method required for A259350, which is over 4.5 orders of magnitude faster than the analog of this (and may still be some distance best).",
        "a(1)=A093550(6) (that sequence's 5th term, with offset 2). The program arbitrarily makes use of this knowledge, but will run (slower) without it."
    ],
    "link": [
        "Giovanni Resta, <a href=\"/A259349/b259349.txt\">Table of n, a(n) for n = 1..10000</a>"
    ],
    "example": [
        "1990586013 = 3*13*29*67*109*241,",
        "1990586014 = 2*23*37*43*59*461, and",
        "1990586015 = 5*11*17*19*89*1259; and no smaller trio of this kind exists, making the middle value a(1)."
    ],
    "program": [
        "(PARI)",
        "{",
        "\\\\Program initialized with known a(1).\\\\",
        "\\\\The purpose of vector s and value u\\\\",
        "\\\\is to skip bad values modulo 36.\\\\",
        "k=1990586014;s=[4,4,8,8,8,4];u=1;",
        "while(1,",
        "  if(issquarefree(k),",
        "    if(issquarefree(k-1),",
        "      if(issquarefree(k+1),",
        "        if(omega(k)==6,",
        "          if(omega(k-1)==6,",
        "            if(omega(k+1)==6,",
        "              print1(k\" \")))))));",
        "  k+=s[u];if(u==6,u=1,u++))",
        "}"
    ],
    "xref": [
        "Cf. A093550, A169834, A248201, A248202, A248203, A248204, A259350, A259801."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_James G. Merickel_, Jun 24 2015",
    "references": 8,
    "revision": 37,
    "time": "2015-07-20T17:57:48-04:00",
    "created": "2015-07-14T12:34:43-04:00"
}