{
    "number": 191867,
    "data": "41,116,125,136,149,164,169,181,369,416,425,436,449,464,481,641,916,925,936,949,964,981,1009,1225,1256,1289,1361,1576,1616,1625,1636,1649,1664,1681,1961,2516,2525,2536,2549,2561,2564,2581,3616,3625,3636,3649,3664",
    "name": "Numbers n which are both the sum of two nonzero squares, and the concatenation of the decimal representation of two nonzero squares.",
    "comment": [
        "It would be interesting to investigate such numbers w.r.t. higher powers and larger n."
    ],
    "link": [
        "Klaus Brockhaus, <a href=\"/A191867/b191867.txt\">Table of n, a(n) for n = 1..1000</a>"
    ],
    "example": [
        "The smallest such number is 41, since it is both the sum of two squares (i.e. 4^2, 5^2} as well as the concatenation of two squares (i.e. 2^2, 1^2).",
        "3649 also belongs to this sequence because it is sum of two squares (i.e. 60^2, 7^2) and the concatenation of two squares (i.e. 6^2, 7^2)."
    ],
    "mathematica": [
        "(* find numbers that can be split as the SUM of two powers (squares, cubes, etc.) and also as CONCATENATION of the same powers *)",
        "siamesePowers[n_, power_] := Module[",
        "{listOfSumOfPowers, a, b, i, listOfConcatenatedPowers},",
        "listOfSumOfPowers = Outer[Plus, Table[{i^power}, {i, 1, n}], Table[{i^power}, {i, 1, n}]] // Flatten;",
        "concatNumbers[a_, b_] := IntegerDigits[{a, b}] // Flatten // FromDigits;",
        "listOfConcatenatedPowers := Outer[concatNumbers, Table[i^power, {i, 1, n}], Table[i^power, {i, 1, n}]] // Flatten;",
        "(* The intersection of these 2 lists is the set of our special Siamese numbers *)",
        "Intersection[listOfSumOfPowers, listOfConcatenatedPowers]",
        "]",
        "siamesePowers[30, 2] (* Generate the first 30 such numbers for squares *)"
    ],
    "program": [
        "(MAGMA) z:=65; T:=Sort([ s: a in [b..z], b in [1..z] | s le z^2 where s is a^2+b^2 ]); SplitToSquares:=function(n); V:=[]; S:=Intseq(n); for j in [1..#S-1] do A:=[ S[k]: k in [1..j] ]; a:=Seqint(A); B:=[ S[k]: k in [j+1..#S] ]; b:=Seqint(B); if a gt 0 and A[#A] gt 0 and IsSquare(a) and IsSquare(b) then Append(~V, [<b, a>]); end if; end for; return V; end function; U:=[ p: j in [1..#T] | P ne [] where P is SplitToSquares(p) where p is T[j] ]; [ U[j]: j in [1..#U] | j eq 1 or U[j-1] ne U[j] ]; // Klaus Brockhaus, Jun 19 2011",
        "(PARI) is_A191867(n) = for(p=10,n, issquare(n\\p) && issquare(n%p) && n%p*10>=p && return(is_A000404(n)); p=p*10-1)  \\\\ - _M. F. Hasler_, Jun 19 2011"
    ],
    "xref": [
        "Cf. A000404, A048385."
    ],
    "keyword": "nonn,base",
    "offset": "1,1",
    "author": "Raghavendra Ugare, Jun 18 2011",
    "references": 1,
    "revision": 15,
    "time": "2013-01-03T12:43:38-05:00",
    "created": "2011-06-19T20:47:01-04:00"
}