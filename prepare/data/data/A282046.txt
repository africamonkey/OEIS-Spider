{
    "number": 282046,
    "data": "1,6,66,852,11874,172860,2586108,39403704,608191266,9477587436,148782847572,2349371691528,37276209494076,593819849120712,9492182832078888,152184075600182352,2446292788927524258,39414680294672271756,636376864032528135204,10294159197891381551208",
    "name": "From solution to a certain functional equation.",
    "link": [
        "Shaun Cooper, Jes\u00fas Guillera, Armin Straub, Wadim Zudilin, <a href=\"http://arxiv.org/abs/1604.01106\">Crouching AGM, Hidden Modularity</a>, arXiv:1604.01106 [math.NT], 5-April-2016. See Section 2."
    ],
    "program": [
        "(Python)",
        "fact = [1]",
        "for i in range(1, 80):",
        "    fact.append(fact[-1]*i)",
        "def cnk(n, k):",
        "    return fact[n]//fact[k]//fact[n-k]",
        "def cc(N): # returns first N terms of A282045",
        "    c = [1]",
        "    for n in range(1, N):",
        "        c.append(sum(cnk(n+k+1, 3*k+1)*4**(n-2*k)*c[k] for k in range(n//2+1)) - sum(cnk(n+2*k+1, 3*k+1)*(-2)**(n-k)*c[k] for k in range(n)))",
        "    return c",
        "def dd(ccc):",
        "    d = [1]",
        "    for n in range(1, len(ccc)):",
        "        d.append((ccc[n]-sum(d[k]*d[n-k] for k in range(1, n)))//2)",
        "    return d",
        "print(dd(cc(25)))",
        "# _Andrey Zabolotskiy_, Feb 22 2017"
    ],
    "xref": [
        "Cf. A282045."
    ],
    "keyword": "nonn",
    "offset": "0,2",
    "author": "_N. J. A. Sloane_, Feb 21 2017",
    "ext": [
        "More terms from _Andrey Zabolotskiy_, Feb 22 2017"
    ],
    "references": 1,
    "revision": 8,
    "time": "2017-02-23T23:27:07-05:00",
    "created": "2017-02-21T21:35:07-05:00"
}