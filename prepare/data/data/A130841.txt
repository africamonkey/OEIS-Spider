{
    "number": 130841,
    "data": "1,1,1,2,2,3,3,5,6,8,8,12,12,15,17,23,23,31,31,41,44,52,52,69,73,85,91,109,109,136,136,162,170,193,199,248,248,279,291,344,344,406,406,466,493,545,545,646,655,740,763,860,860,986,1002,1132,1163,1272,1272,1484",
    "name": "Number of ways to write n as a sum of oterms, where an oterm is an ordered product of (1+oterm), sorted by size and an empty product has value 1.",
    "comment": [
        "Every oterm is at least 1 (implicit) and every 1+oterm is at least 2. Therefore to write 1 as a product of (1+oterms) can only be done as an empty product, which has value 1. Therefore a(1) = 1."
    ],
    "formula": [
        "a(n) = sum over sequences (n_1,n_2,...,n_k) such that 2 <= n_1 <= n_2 <= ... <= n_k and n1*n2*...*nk=n of the product of j from 1 to k of a(n_j-1). The program, in J, implements this formula. (It works by factorizing n and then grouping the factors in all distinct ways. This J code handles the a(1) case without requiring any exception case.)"
    ],
    "example": [
        "a(8)=5 because we can write 8 as one of (1+1+1+1+1+1+1+1), (1+1+1+1+(1+1)*(1+1)), (1+(1+1)*(1+1+1)), (1+1)*(1+1+1+1), (1+1)*(1+1)*(1+1)*(1+1)"
    ],
    "program": [
        "(J) belly =: ~. @ (i.\"1~) @ (#~ #: (i.@ ^~))",
        "bell =: (<\"1@belly@#) </.&.> <",
        "bells =: [: ~. [: /:~&.> [: /:~&.>&.> bell",
        "fax =: [: >&.> [: */&.>&.> [: bells q:",
        "weird =: [: +/ [: > [: */&.> [: $:\"0&.> [: <:&.> fax",
        "w =: weird\"0"
    ],
    "keyword": "nonn",
    "offset": "1,4",
    "author": "_Daniel R. L. Brown_, Jul 19 2007, revised Nov 23 2007",
    "references": 0,
    "revision": 6,
    "time": "2013-10-13T22:34:46-04:00",
    "created": "2007-11-10T03:00:00-05:00"
}