{
    "number": 263194,
    "data": "0,109,110,219,220,329,330,439,440,549,550,659,660,769,770,879,880,989,990,1208,1318,1428,1538,1648,1758,1868,1978,2307,2417,2527,2637,2747,2857,2967,3406,3516,3626,3736,3846,3956,4505,4615,4725,4835,4945,5604,5714,5824,5934,6703,6813,6923,7802,7912,8901",
    "name": "4-digit numbers (with leading zeros supplied where necessary) in which the sum of the number consisting of the first two digits and the number consisting of the last two digits equals the number consisting of the middle two digits.",
    "comment": [
        "0 can be a leading digit."
    ],
    "reference": [
        "George Bredehorn, The Giant Book of Puzzles, Main Street, 2013, page 12."
    ],
    "link": [
        "Aresh Pourkavoos, <a href=\"http://mathtician.weebly.com/an-integer-sequence.html\">Website with C code to generate sequence</a>"
    ],
    "formula": [
        "The sequence contains stretches where, for some n, a(n) - a(n-1) = 110."
    ],
    "example": [
        "Since 19 + 78 = 97, 1978 is a term."
    ],
    "mathematica": [
        "fQ[n_] := Block[{d = PadLeft[IntegerDigits@ n, 4]}, FromDigits@ d[[1 ;; 2]] + FromDigits@ d[[3 ;; 4]] == FromDigits@ d[[2 ;; 3]]]; Select[Range[0, 10^4 - 1], fQ] (* _Michael De Vlieger_, Oct 26 2015 *)"
    ],
    "program": [
        "(C)",
        "#include <stdio.h>",
        "int main(){",
        "  int e = 10; // what base we are using: experiment with different values (values above 10 do not work well)",
        "  for (int a = 0; a < e; a++){ // I know these nested loops are inelegant, but they're the easiest way",
        "    for (int b = 0; b < e; b++){",
        "      for (int c = 0; c < e; c++){",
        "        for (int d = 0; d < e; d++){",
        "          if ((10*a)+b+(10*c)+d == (10*b)+c){ // if the number formed by the first two digits plus the number formed by the last two digits equals the number formed by the middle two digits",
        "            if (e <= 10){",
        "            printf(\"%d%d%d%d, \", a, b, c, d); // print the number",
        "            }",
        "            else{",
        "            printf(\"%d %d %d %d,  \", a, b, c, d); // print the number with extra spaces",
        "            }",
        "          }",
        "        }",
        "      }",
        "    }",
        "  }",
        "  printf(\"\\n\");",
        "  return 0;",
        "}",
        "(PARI) is(n) = n < 10000 && n%100 + n \\ 100 == (n \\ 10) % 100 \\\\ _David A. Corneth_, Oct 14 2017"
    ],
    "xref": [
        "Cf. A293686."
    ],
    "keyword": "base,easy,fini,full,nonn",
    "offset": "1,2",
    "author": "_Aresh Pourkavoos_, Oct 11 2015",
    "references": 1,
    "revision": 26,
    "time": "2017-10-16T11:33:42-04:00",
    "created": "2015-12-06T11:41:25-05:00"
}