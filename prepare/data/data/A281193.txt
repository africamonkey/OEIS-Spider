{
    "number": 281193,
    "data": "0,100,110,101000,101010,101100,101110,1110000,1110010,1110100,1110110,1111000,1111010,1111100,1111110,10100100000,10100100010,10100100100,10100100110,10100101000,10100101010,10100101100,10100101110,10100110000,10100110010,10100110100",
    "name": "Elias's omega code for n.",
    "comment": [
        "The idea of the Elias omega code is similar to that of the Elias delta code (A281150), except that the length of the codeword in the omega code is recursively encoded.",
        "The number of bits in a(n) is equal to A072464(n)."
    ],
    "link": [
        "Indranil Ghosh, <a href=\"/A281193/b281193.txt\">Table of n, a(n) for n = 1..10000</a>",
        "Khalid Sayood (Editor), <a href=\"https://books.google.co.in/books?id=LjQiGwyabVwC&amp;pg=PA60&amp;lpg=PA60&amp;dq=bl&amp;ots=DEU6sh5UC9&amp;sig=GJcMAaVWdAH1pQ4LYNyZVaMUlRM&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwjzq7ulvcfRAhVJRo8KHbNUC1QQ6AEIITAB#v=onepage&amp;q=Even%20Rodeh&amp;f=false\">Lossless Compression Handbook</a>, Chapter 3 - Universal Codes, p. 59, section 3.6.",
        "Wikipedia, <a href=\"https://en.wikipedia.org/wiki/Elias_omega_coding\">Elias omega coding</a>"
    ],
    "program": [
        "(Python)",
        "def E(n):",
        "....s=\"\"",
        "....if n==1:",
        "........return \"0\"",
        "....else:",
        "........b=(bin(n)[2:])",
        "........s+=E(len(b)-1)+b",
        "....return s",
        "def elias_omega(n):",
        "....return E(n)[1:]+\"0\""
    ],
    "xref": [
        "Cf. A072464, A281149, A281150."
    ],
    "keyword": "nonn,base",
    "offset": "1,2",
    "author": "_Indranil Ghosh_, Jan 17 2017",
    "references": 3,
    "revision": 23,
    "time": "2017-01-18T22:12:10-05:00",
    "created": "2017-01-18T22:12:10-05:00"
}