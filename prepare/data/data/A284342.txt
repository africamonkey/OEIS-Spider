{
    "number": 284342,
    "data": "12,18,24,36,40,45,48,50,54,56,60,63,72,75,80,84,90,96,98,100,108,112,120,126,132,135,144,147,150,156,160,162,168,175,176,180,189,192,196,198,200,204,208,216,224,225,228,234,240,242,245,250,252,264,270,275,276,280,288,294,297,300",
    "name": "Numbers n such that A065642(n) < n*lpf(n), where lpf = least prime factor (A020639).",
    "comment": [
        "Numbers n for which A065642(n) < A285109(n). Positions of terms > 1 in A285337. - _Antti Karttunen_, Apr 19 2017"
    ],
    "link": [
        "Antti Karttunen, <a href=\"/A284342/b284342.txt\">Table of n, a(n) for n = 1..10000</a>"
    ],
    "program": [
        "(PARI) for(n=1,300,for(k=1,n^2-n,a=factorback(factorint(n)[,1]); b=factorback(factorint(n+k)[,1]); c=vecmin(factor(n)[,1]); if(a==b&&n+k<n*c&!print1(n\", \")&break)))",
        "(PARI)",
        "A020639(n) = if(1==n,n,vecmin(factor(n)[, 1]));",
        "A007947(n) = factorback(factorint(n)[, 1]); \\\\ From _Andrew Lelechenko_, May 09 2014",
        "A065642(n) = { my(r=A007947(n)); if(1==n,n,n = n+r; while(A007947(n) <> r, n = n+r); n); };",
        "isA284342(n) = (A065642(n) < n*A020639(n));",
        "n=0; k=1; while(k <= 10000, n=n+1; if(isA284342(n),write(\"b284342.txt\", k, \" \", n);k=k+1));",
        "\\\\ _Antti Karttunen_, Apr 19 2017",
        "(Python)",
        "from operator import mul",
        "from sympy import primefactors",
        "def a007947(n): return 1 if n<2 else reduce(mul, primefactors(n))",
        "def a065642(n):",
        "    if n==1: return 1",
        "    r=a007947(n)",
        "    n = n + r",
        "    while a007947(n)!=r:",
        "        n+=r",
        "    return n",
        "print [n for n in xrange(10, 301) if a065642(n)<n*min(primefactors(n))] # _Indranil Ghosh_, Apr 20 2017"
    ],
    "xref": [
        "Complement: A285100.",
        "Cf. A007947, A020639, A065642, A285109, A285337."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_Gionata Neri_, Mar 25 2017",
    "references": 5,
    "revision": 15,
    "time": "2017-04-20T15:01:57-04:00",
    "created": "2017-03-25T10:09:43-04:00"
}