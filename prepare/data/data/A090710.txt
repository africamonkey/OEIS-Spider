{
    "number": 90710,
    "data": "2,3,5,23,41,43,61,113,131,241,313,401,421,443,461,463,661,1013,1033,1051,1123,1231,1301,1433,1453,1543,1613,2111,2131,2153,2203,2333,2441,2531,2551,3121,3163,3251,3323,3433,3541,4001,4111,4153,4201,4241,4421",
    "name": "Primes with digits less than 7 whose decimal representation is also a prime when interpreted in base 7.",
    "comment": [
        "Note that the definition of, e.g., A090714 works \"the other way round\". - _M. F. Hasler_, Jan 03 2014"
    ],
    "link": [
        "Harvey P. Dale, <a href=\"/A090710/b090710.txt\">Table of n, a(n) for n = 1..1000</a>"
    ],
    "example": [
        "23 is a prime and a valid number in base 7, and 23 [base 7] = 17 [base 10] is again a prime."
    ],
    "mathematica": [
        "Select[ FromDigits@# & /@ IntegerDigits[ Prime@ Range@ 270, 7], PrimeQ] (* _Robert G. Wilson v_, Jan 05 2014 *)",
        "FromDigits/@Select[Tuples[{0,1,2,3,4,5,6},4],AllTrue[ {FromDigits[ #], FromDigits[ #,7]}, PrimeQ]&] (* The program uses the AllTrue function from Mathematica version 10 *) (* _Harvey P. Dale_, Dec 29 2015 *)"
    ],
    "program": [
        "(PARI) is_A090710(p,b=7)=vecmax(d=digits(p))<b&&isprime(vector(#d,i,b^(#d-i))*d~)&&isprime(p) \\\\ _M. F. Hasler_, Jan 03 2014",
        "(PARI) fixBase(n, oldBase, newBase)=my(d=digits(n, oldBase), t=newBase-1); for(i=1, #d, if(d[i]>t, for(j=i, #d, d[j]=t); break)); fromdigits(d, newBase)",
        "list(lim)=my(v=List(), t); forprime(p=2, fixBase(lim\\1, 10, 7), if(isprime(t=fromdigits(digits(p, 7), 10)), listput(v, t))); Vec(v) \\\\ _Charles R Greathouse IV_, Nov 07 2016"
    ],
    "xref": [
        "Cf. A031974, A089971, A089981, A090707, A090708, A090709, A235394, A235395, A000040."
    ],
    "keyword": "base,nonn",
    "offset": "1,1",
    "author": "_Cino Hilliard_, Jan 18 2004",
    "ext": [
        "Name, example and offset corrected by _M. F. Hasler_, Jan 03 2014"
    ],
    "references": 9,
    "revision": 29,
    "time": "2016-11-07T12:39:13-05:00",
    "created": "2004-02-19T03:00:00-05:00"
}