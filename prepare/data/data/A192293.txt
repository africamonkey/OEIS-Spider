{
    "number": 192293,
    "data": "32,98,2524,199282,1336968",
    "name": "Let sigma*_m (n) be the result of applying the sum of anti-divisors m times to n; call n (m,k)-anti-perfect if sigma*_m (n) = k*n; this sequence gives the (2,3)-anti-perfect numbers.",
    "comment": [
        "Like A019281 but using anti-divisors.",
        "a(6) > 2*10^7. - _Chai Wah Wu_, Dec 02 2014"
    ],
    "example": [
        "sigma*(32)= 3+5+7+9+13+21=58; sigma*(58)= 3+4+5+9+13+23+39=96 and 3*32=96.",
        "sigma*(98)= 3+4+5+13+15+28+39+65=172; sigma*(172)= 3+5+7+8+15+23+49+69+115=294 and 3*98=294.",
        "sigma*(2524)= 3+7+8+9+11+17+27+33+49+51+99+103+153+187+297+459+561+721+1683=4478; sigma*(4478)= 3+4+5+9+13+15+45+53+169+199+597+689+995+1791+2985=7572 and 3*2524=7572."
    ],
    "maple": [
        "with(numtheory): P:= proc(n) local i,j,k,s,s1; for i from 3 to n do",
        "k:=0; j:=i; while j mod 2 <> 1 do k:=k+1; j:=j/2; od; s:=sigma(2*i+1)+sigma(2*i-1)+sigma(i/2^k)*2^(k+1)-6*i-2;",
        "k:=0; j:=s; while j mod 2 <> 1 do k:=k+1; j:=j/2; od; s1:=sigma(2*s+1)+sigma(2*s-1)+sigma(s/2^k)*2^(k+1)-6*s-2;",
        "if s1/i=3 then print(i); fi; od; end: P(10^9);"
    ],
    "program": [
        "(Python)",
        "from sympy import divisors",
        "def antidivisors(n):",
        "....return [2*d for d in divisors(n) if n > 2*d and n % (2*d)] + \\",
        "...........[d for d in divisors(2*n-1) if n > d >=2 and n % d] + \\",
        "...........[d for d in divisors(2*n+1) if n > d >=2 and n % d]",
        "A192293_list = []",
        "for n in range(1,10**4):",
        "....if 3*n == sum(antidivisors(sum(antidivisors(n)))):",
        "........A192293_list.append(n) # _Chai Wah Wu_, Dec 02 2014"
    ],
    "xref": [
        "Cf. A019281, A066272, A192290, A192291, A192292."
    ],
    "keyword": "nonn,more,less",
    "offset": "1,1",
    "author": "_Paolo P. Lava_, Jun 29 2011",
    "ext": [
        "a(4)-a(5) from _Chai Wah Wu_, Dec 01 2014"
    ],
    "references": 6,
    "revision": 22,
    "time": "2015-10-08T12:12:30-04:00",
    "created": "2011-07-13T15:23:50-04:00"
}