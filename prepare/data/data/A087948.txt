{
    "number": 87948,
    "data": "1,4,5,9,16,17,18,25,36,37,39,49,64,65,66,68,81,100,101,105,121,126,144,145,146,147,150,169,196,197,203,225,256,257,258,260,264,289,324,325,327,333,361,400,401,402,405,410,441,484,485,495,529,576,577,578,579",
    "name": "Sum of successive remainders in computing euclidean algorithm for (1, -1/sqrt(-n)) has real and imaginary parts equal.",
    "comment": [
        "Since the computation of the algorithm needs an extension of the integer part over a subset of C, the rule: floor(i*x) = i*floor(x) is used (which is what MuPAD does). The following program computes the exact value of the sum."
    ],
    "example": [
        "kappa(-1/sqrt(-105)) = -(1/210 + (1/210)i)*sqrt(105)."
    ],
    "program": [
        "(MuPAD) kappa_neg_1_over_comp_sqrt := proc(n) local a,b,i,p; begin if (a := -sqrt(-n)+ceil(sqrt(-n))) = 0 then return(0) end_if: i := a := simplify(1/a,sqrt); p := 1; b := 0; repeat p := p*a; b := b*a+a-floor(a); until (a := simplify(1/(a-floor(a)),sqrt)) = i end_repeat: return(simplify(-(b/(p-1) + 1/a)/sqrt(-n),sqrt)); end_proc:"
    ],
    "xref": [
        "Cf. A086378, A087947."
    ],
    "keyword": "nonn",
    "offset": "1,2",
    "author": "_Thomas Baruchel_, Sep 07 2003",
    "references": 1,
    "revision": 9,
    "time": "2017-10-11T05:07:53-04:00",
    "created": "2004-02-19T03:00:00-05:00"
}