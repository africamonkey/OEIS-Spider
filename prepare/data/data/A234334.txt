{
    "number": 234334,
    "data": "0,1,5,8,25,40,45,65,80,153,160,169,200,221,325,360,416,425,493,520,625,680,725,925,936,1025,1040,1073,1088,1305,1360,1681,1768,1800,1813,1845,1961,2000,2320,2385,2501,2600,2925,3016,3185,3200,3400,3445,3721,3848",
    "name": "Numbers k such that both distances from k to two nearest squares are perfect squares.",
    "comment": [
        "Except a(1)=0, a(n) are numbers k such that both k-x and y-k are perfect squares, where x and y are two nearest to k squares: x < k <= y.",
        "The sequence of sums of distances begins: 1, 1, 5, 5, 9, 13, 13, 17, 17, 25, 25, 25, 29, 29, 37, 37, 41, 41, 45, 45, 49, 53, 53, 61, 61, 65, 65, 65, 65, 73, 73, 81, 85, ... (cf. A057653).",
        "Each term is either a square or has a pair: if i^2 + j^2 = 2*m+1 then m^2+i^2 and m^2+j^2 are both in the sequence."
    ],
    "example": [
        "The two squares nearest to 25 are 16 and 25, because both 25-25=0 and 25-16=9 are squares, 25 is in the sequence.",
        "The two squares nearest to 45 are 36 and 49, because both 45-36=9 and 49-45=4 are squares, 45 is in the sequence."
    ],
    "program": [
        "(C)",
        "#include <stdio.h>",
        "#include <math.h>",
        "typedef unsigned long long U64;",
        "U64 isSquare(U64 a) {",
        "  U64 r = sqrt(a);",
        "  return r*r==a;",
        "}",
        "int main() {",
        "  for (U64 n=0; n<5555; ++n) {",
        "    U64 r = sqrt(n);",
        "    if (r*r==n && n)  --r;",
        "    if (isSquare(n-r*r) && isSquare((r+1)*(r+1)-n))",
        "      printf(\"%llu, \", n);",
        "  }",
        "  return 0;",
        "}"
    ],
    "xref": [
        "Cf. A000290.",
        "Cf. subsequences: A007204, A234335, A234336.",
        "Cf. A234348."
    ],
    "keyword": "nonn,easy",
    "offset": "1,3",
    "author": "_Alex Ratushnyak_, Dec 23 2013",
    "references": 4,
    "revision": 10,
    "time": "2013-12-27T02:56:31-05:00",
    "created": "2013-12-27T02:56:31-05:00"
}