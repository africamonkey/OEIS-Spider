{
    "number": 292275,
    "data": "100,125,150,200,250,300,400,500,600,800,1000,1250,1500,2000,2500,3000,4000,5000,6000,8000,10000,12500,15000,20000,25000,30000,40000,50000,60000,80000,100000,125000,150000,200000,250000,300000,400000,500000,600000,800000,1000000",
    "name": "A sequence of rounded numbers useful for entering values over several orders of magnitude in computer-human interfaces, with 10 values per order of magnitude.",
    "comment": [
        "Values from the real-valued sequence R = {1.0, 1.25, 1.5, 2.0, 2.5, 3.0, 4.0, 5.0, 6.0, 8.0, 10.0, 12.5, 15.0, 20.0, 25.0, 30.0, 40.0, 50.0, 60.0, 80.0, 100.0, 125.0, 150.0, 200.0, 250.0, 300.0, 400.0, 500.0, 600.0, 800.0, 1000.0, ...} are used in certain computer applications, such as geographic information system (GIS) applications where they are provided as round numbers for selection as map scale values. This real-valued sequence R (all of whose values above 12.5 are integers) represents a convenient balance between roundness of the base-10 values and evenness of their spacing (in logarithmic terms).",
        "The real-valued sequence can be continued infinitely in both directions; for simplicity, the terms listed in the Data section for this integer sequence begin at a(20) = 100 = 10^2. (Extending the sequence to lower values of n would cause the noninteger value 12.5 to be reached at n=11.)",
        "Some properties of the sequence (see Example section):",
        "(1) on a logarithmic scale, the terms are fairly evenly spaced;",
        "(2) all terms are round numbers; other than those terms that begin with digits 125, 15, or 25 (each of which has no prime factor larger than 5), each term has only one nonzero digit;",
        "(3) there are 10 terms per order of magnitude;",
        "(4) every ratio between consecutive terms is one of three small fractions: 4/3, 5/4, and 6/5."
    ],
    "formula": [
        "a(n) = 10^n *  1  if n mod 10 = 0;",
        "       10^n * 5/4 if n mod 10 = 1;",
        "       10^n * 3/2 if n mod 10 = 2;",
        "       10^n *  2  if n mod 10 = 3;",
        "       10^n * 5/2 if n mod 10 = 4;",
        "       10^n *  3  if n mod 10 = 5;",
        "       10^n *  4  if n mod 10 = 6;",
        "       10^n *  5  if n mod 10 = 7;",
        "       10^n *  6  if n mod 10 = 8;",
        "       10^n *  8  if n mod 10 = 9."
    ],
    "example": [
        "n   a(n)  a(n)/a(n-1)   log_10(a(n))    log_10(a(n)) - n/10",
        "==  ====  ===========  ===============  ===================",
        "20   100      5/4      2.0000000000...   0.0000000000000...",
        "21   125      5/4      2.0969100130...  -0.0030899869919...",
        "22   150      6/5      2.1760912590...  -0.0239087409443...",
        "23   200      4/3      2.3010299956...  +0.0010299956639...",
        "24   250      5/4      2.3979400086...  -0.0020599913279...",
        "25   300      6/5      2.4771212547...  -0.0228787452803...",
        "26   400      4/3      2.6020599913...  +0.0020599913279...",
        "27   500      5/4      2.6989700043...  -0.0010299956639...",
        "28   600      6/5      2.7781512503...  -0.0218487496163...",
        "29   800      4/3      2.9030899869...  +0.0030899869919...",
        "30  1000      5/4      3.0000000000...   0.0000000000000..."
    ],
    "xref": [
        "Cf. A231848."
    ],
    "keyword": "nonn",
    "offset": "20,1",
    "author": "_Jon E. Schoenfield_, Sep 12 2017",
    "references": 0,
    "revision": 6,
    "time": "2017-09-12T21:34:05-04:00",
    "created": "2017-09-12T21:34:05-04:00"
}