{
    "number": 284668,
    "data": "9,97,871,6171,77031,837799,8400511,63728127,670617279,9780657631,75128138247",
    "name": "Numbers that have the largest Collatz total stopping time of all numbers below 10^n.",
    "comment": [
        "Collatz stopping time is defined as the number of steps that a number n takes to converge to 1 using one of the following steps:",
        "  0) if n is 1, stop.",
        "  1) if n is even, divide n by 2 (n/2).",
        "  2) if n is odd, multiply n by 3 and add 1 (3n+1)."
    ],
    "link": [
        "Gary T. Leavens, Mike Vermeulen, <a href=\"https://doi.org/10.1016/0898-1221(92)90034-F\">3x+1 Search Programs</a>, Computers & Mathematics with Applications. 24 (11): 79-99 (1992).",
        "Eric Roosendaal, <a href=\"http://www.ericr.nl/wondrous/delrecs.html\">3x+1 delay records</a>",
        "<a href=\"/index/3#3x1\">Index entries for sequences related to 3x+1 (or Collatz) problem</a>"
    ],
    "formula": [
        "a(n) = max{i} (steps(i) for i in range from 1 to 10^n-1).",
        "max(i) returns the i with the maximum steps(i) value.",
        "where steps(n) is defined as follows",
        "steps(n)= 0 if n=1.",
        "          1+steps(n/2) if n is even.",
        "          1+steps(3*n+1) if n is odd."
    ],
    "example": [
        "For n=1, steps(1) to steps(9) take the following values: 0, 1, 7, 2, 5, 8, 16, 3, 19; the maximum of all those is 19 which occurs for steps(9) therefore a(1)=9."
    ],
    "program": [
        "(Python 3.4)",
        "def steps(n):",
        "if n==1:",
        "  return 0",
        "else:",
        "  if (n%2)==0:",
        "  return 1+steps(int(n/2))",
        "  else:",
        "  return 1+steps(3*n+1)",
        "def max_steps(i):",
        "    a=max([[i,steps(i)] for i in range(1,10**(i))],key=lambda x:x[1])",
        "    return a[0]"
    ],
    "keyword": "nonn,more,changed",
    "offset": "1,1",
    "author": "_Rahul Chand_, Apr 01 2017",
    "references": 0,
    "revision": 17,
    "time": "2018-02-27T02:53:04-05:00",
    "created": "2017-04-02T13:05:08-04:00"
}