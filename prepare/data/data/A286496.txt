{
    "number": 286496,
    "data": "1,1,2,2,4,8,16,28,50,92,170,314,584,1092,2048,3854,7280,13796,26214,49932,95324,182360,349524,671088,1290554,2485512,4793490,9256394",
    "name": "Renyi-Ulam liar numbers: for k=1,2,3,... this is the maximum n such that k questions \"Is x in subset S of {1,...,n}?\" are guaranteed to determine x when at most one answer can be a lie.",
    "comment": [
        "Calculated from Andrzej Pelc's complete solution for 1-liar games which gives the minimum number of questions required for a given set {1,...,n}.",
        "Andrzej Pelc's formula for the minimum number of questions required for a given set {1,...,n} is: the least value of q such that f(q)>=n, where f(q)=2^q/(q+1) for even n, and f(q)=(2^q-q+1)/(q+1) for odd n. We use this to generate the sequence of maximum set sizes for each value of q."
    ],
    "link": [
        "D. Osthus and R. Watkinson, <a href=\"http://dx.doi.org/10.4171/EM/92\">A simple solution to Ulam's liar game with one lie</a>, Elemente der Mathematik 63 (2008), 97-101.",
        "A. Pelc, <a href=\"https://doi.org/10.1016/0097-3165(87)90065-3\">Solution of Ulam\u2019s Problem on searching with a lie</a>, J. Combinatorial Theory, Series A, vol. 44 (1987), 129-140."
    ],
    "example": [
        "a(1) = 1 since 1 question is (vacuously) sufficient to determine x in {1}; a(2) = 1, since 2 questions (with one possible lie) is no better than 1; a(3) >= 2, since we can determine x in {1,2} by asking \"Is x in {1}?\" three times and majority voting. But a(3) is not >2 because we need 5 questions for {1,2,3}; which implies a(4) = 2 also."
    ],
    "maple": [
        "LiarSequence:=proc(n)",
        "local q,L,k;",
        "q:=1: L:=NULL;",
        "for k from 1 to n do",
        "   while 2^q/(q+1)-(k+1 mod 2)*(q-1)/(q+1)<k+1 do q:=q+1; L:=L,k end:",
        "end: L end:"
    ],
    "keyword": "nonn",
    "offset": "1,3",
    "author": "_Robin W. Whitty_, Jun 15 2017",
    "references": 0,
    "revision": 14,
    "time": "2017-06-28T01:04:31-04:00",
    "created": "2017-06-28T01:04:31-04:00"
}