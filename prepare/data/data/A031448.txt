{
    "number": 31448,
    "data": "1,5,6,19,21,22,25,26,28,71,75,77,78,83,85,86,89,90,92,99,101,102,105,106,108,113,114,116,120,271,279,283,285,286,295,299,301,302,307,309,310,313,314,316,327,331,333,334,339,341,342",
    "name": "Numbers n which in base 2 has one fewer 0's than 1's.",
    "comment": [
        "A037861(a(n)) = -1. - _Reinhard Zumkeller_, Mar 31 2015",
        "The viabin numbers of the integer partitions in which the number of parts is equal to the largest part (for the definition of viabin number see comment in A290253). For example, 99 is in the sequence because it is the viabin number of the integer partition [4,2,2,2]. - _Emeric Deutsch_, Aug 29 2017"
    ],
    "link": [
        "Reinhard Zumkeller, <a href=\"/A031448/b031448.txt\">Table of n, a(n) for n = 1..10000</a>",
        "<a href=\"/index/Bi#binary\">Index entries for sequences related to binary expansion of n</a>"
    ],
    "example": [
        "99 is in the sequence because its binary form is 1100011. - _Emeric Deutsch_, Aug 29 2017"
    ],
    "maple": [
        "vitopart := proc (n) local L, i, j, N, p, t: N := 2*n; L := ListTools:-Reverse(convert(N, base, 2)): j := 0: for i to nops(L) do if L[i] = 0 then j := j+1: p[j] := numboccur(L[1 .. i], 1) end if end do: sort([seq(p[t], t = 1 .. j)], `>=`) end proc: A := {}; for m to 500 do if nops(vitopart(m)) = max(vitopart(m)) then A := `union`(A, {m}) else  end if end do: A; # program is based on my comment; the command vitopart(n) yields the integer partition having viabin number n. - _Emeric Deutsch_, Aug 29 2017"
    ],
    "program": [
        "(Haskell)",
        "a031448 n = a031448_list !! (n-1)",
        "a031448_list = filter ((== -1) . a037861) [1..]",
        "-- _Reinhard Zumkeller_, Mar 31 2015"
    ],
    "xref": [
        "Cf. A023416, A000120, A031444, subsequence of A089648."
    ],
    "keyword": "nonn",
    "offset": "1,2",
    "author": "_Clark Kimberling_",
    "references": 7,
    "revision": 11,
    "time": "2017-08-29T19:56:28-04:00",
    "created": "1999-12-11T03:00:00-05:00"
}