{
    "number": 237188,
    "data": "5,29,2549,6269,41609,259379,418349,492059,514049,521879,819029,1171199,1659809,1994339,2014139,2325509,2327399,2392139,2420699,2481179,2844269,3142829,3393359,3637169,3990029",
    "name": "Smallest member of Sophie Germain pair, where each member of the prime pair is the smallest of its prime triplet (p, p+2, p+8).",
    "comment": [
        "It is not known if there are infinitely many Sophie Germain pairs with this property.",
        "The sequence is infinite under Dickson's conjecture. Aside from a(1) = 5, all terms are 29 or 179 mod 210. - _Charles R Greathouse IV_, Feb 05 2014"
    ],
    "link": [
        "Abhiram R Devesh and Charles R Greathouse IV, <a href=\"/A237188/b237188.txt\">Table of n, a(n) for n = 1..10000</a> (first 135 terms from Devesh)",
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/SophieGermainPrime.html\">Sophie Germain Prime</a>",
        "Wikipedia, <a href=\"http://en.wikipedia.org/wiki/Sophie_Germain_prime\">Sophie Germain prime</a>"
    ],
    "example": [
        "a(1): p = 5; (2*p)+1 = 11",
        "Prime triplets (5,7,13);(11,13,19)",
        "a(2): p = 29; (2*p)+1=59",
        "Prime triplets (29,31,37);(59,61,67)"
    ],
    "mathematica": [
        "sgpQ[n_]:=Module[{sg=2n+1},AllTrue[Flatten[{sg+{0,2,8},n+{2,8}}], PrimeQ]]; Select[Prime[Range[300000]],sgpQ] (* The program uses the AllTrue function from Mathematica version 10 *) (* _Harvey P. Dale_, Feb 02 2016 *)"
    ],
    "program": [
        "(Python)",
        "p1=2",
        "n=2",
        "count=0",
        "while p1>2:",
        "....## Generate the a chain of numbers with length 4",
        "....cc=[]",
        "....cc.append(p1)",
        "....for i in range(1, n):",
        "........cc.append((2**(i)*p1+((2**i)-1)))",
        "....## chain entries + 2",
        "....cc2=[c+2 for c in cc]",
        "....## chain entries + 8",
        "....cc8=[c+8 for c in cc]",
        "....## check if cc is a Sophie Germain Pair or not",
        "....## pf.isp_list returns True or false for a given list of numbers",
        "....##             if they are prime or not",
        "....##",
        "....pcc=pf.isp_list(cc)",
        "....pcc2=pf.isp_list(cc2)",
        "....pcc8=pf.isp_list(cc8)",
        "....## Number of primes for cc",
        "....npcc=pcc.count(True)",
        "....## Number of primes for cc2",
        "....npcc2=pcc2.count(True)",
        "....## Number of primes for cc8",
        "....npcc8=pcc8.count(True)",
        "....if npcc==n and npcc2==n and npcc8==n:",
        "........print \"For length \", n, \" the series is : \", cc, \" ,\", cc2,\" and \",cc8",
        "....p1=pf.nextp(p1)",
        "(PARI) is(n)=isprime(n) && isprime(n+2) && isprime(n+8) && isprime(2*n+1) && isprime(2*n+3) && isprime(2*n+9) \\\\ _Charles R Greathouse IV_, Feb 05 2014"
    ],
    "xref": [
        "Cf. A005384."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_Abhiram R Devesh_, Feb 04 2014",
    "references": 3,
    "revision": 16,
    "time": "2016-02-02T17:21:59-05:00",
    "created": "2014-02-07T11:13:52-05:00"
}