{
    "number": 256241,
    "data": "4,6,12,15,20,21,28,30,33,39,42,44,51,52,57,66,68,69,76,78,87,92,93,102,111,114,116,123,124,129,138,141,148,159,164,172,174,177,183,186,188,201,212,213,219,222,236,237,244,246,249,258,267,268,282,284,291,292,303,309,316,318,321,327,332,339,354,356,366",
    "name": "Numbers n whose Euler's totient function phi(n), divided by two, plus one, p = (phi(n) / 2) + 1, is a divisor of n.",
    "comment": [
        "p is always a prime factor of n as well.",
        "Except for the case n=6, p is always the greatest prime factor of n.",
        "(n/p) is an upper bound on the rest of the prime factors 'q' of n, so always q <= (n/p)."
    ],
    "link": [
        "David Morales Marciel, <a href=\"http://hobbymaths.blogspot.jp/2015/04/eulers-totient-function-statement.html\">Euler's Totient function statement proposal</a>"
    ],
    "example": [
        "For n = 4, phi(n) = 2, p = (phi(n)/2)+1 = 2, is prime and is a prime factor of 4.",
        "For n = 6, phi(n) = 2, p = (phi(n)/2)+1 = 2, is prime and is a prime factor of 6."
    ],
    "program": [
        "(Python)",
        "from sympy import totient",
        "[n for n in range(1, 10**5) if n%((totient(n)/2)+1)==0]",
        "(PARI) isok(n) = (n % (eulerphi(n)/2+1)) == 0; \\\\ _Michel Marcus_, Apr 20 2015"
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_David Morales Marciel_, Apr 19 2015",
    "ext": [
        "Removed long Python code, and added very simple Python program (two lines) with sympy as suggested by the Editor."
    ],
    "references": 0,
    "revision": 44,
    "time": "2015-04-21T14:49:32-04:00",
    "created": "2015-04-21T14:49:32-04:00"
}