{
    "number": 220452,
    "data": "1,3,9,37,225,1881,19873,251889,3712257,62286625,1171487361,24402416193,557542291969,13861636770177,372514645389825,10759590258589441,332386419622387713,10935312198369141249,381705328034883127297,14089260601787531469825,548302210950105933701121",
    "name": "Number of unordered full binary trees with labels from a set of n labels.",
    "comment": [
        "a(n) is the size of the population generated by n unrelated ancestors if two individuals produce one descendant together if and only if they are not related."
    ],
    "link": [
        "Felix A. Pahl, <a href=\"/A220452/b220452.txt\">Table of n, a(n) for n = 1..400</a>",
        "Stack Exchange, <a href=\"http://math.stackexchange.com/questions/258503\">The n immortals problem</a>",
        "V. Kotesovec, <a href=\"https://oeis.org/wiki/User:Vaclav_Kotesovec\">Interesting asymptotic formulas for binomial sums</a>, Jun 09 2013"
    ],
    "formula": [
        "a(n) = sum(binom(n,k)*(2k-3)!!, k=1..n)",
        "a(n) ~ (2n-3)!!*sqrt(e) ~ (2n)!/n!/2^n/(2n-1)*sqrt(e) ~ n^(n-1)*2^(n-1/2)*exp(1/2-n). - _Vaclav Kotesovec_, Dec 17 2012"
    ],
    "example": [
        "For n=3, each of the three pairs of ancestors produces one descendant, and each of these descendants produces one more descendant with the respective remaining ancestor; three ancestors, three first-order descendants and three second-order descendants makes a population of a(3)=9."
    ],
    "mathematica": [
        "Table[Sum[Binomial[n,k]*(2*k-3)!!, {k, 1, n}], {n, 1, 20}] (* _Vaclav Kotesovec_, Dec 17 2012 *)"
    ],
    "program": [
        "(Java)",
        "import java.math.BigInteger;",
        "public class A220452 {",
        "    public static void main (String [] args) {",
        "        int max = Integer.parseInt (args [0]);",
        "        BigInteger [] doubleFactorials = new BigInteger [max + 1];",
        "        BigInteger [] [] binomialCoefficients = new BigInteger [max + 1] [max + 1];",
        "        doubleFactorials [0] = BigInteger.ONE;",
        "        for (int n = 1;n <= max;n++) {",
        "            binomialCoefficients [n] [0] = BigInteger.ONE;",
        "            BigInteger sum = BigInteger.ZERO;",
        "            for (int k = 1;k <= n;k++) {",
        "                binomialCoefficients [n] [k] = k == n ? BigInteger.ONE : binomialCoefficients [n - 1] [k - 1].add (binomialCoefficients [n - 1] [k]);",
        "                sum = sum.add (binomialCoefficients [n] [k].multiply (doubleFactorials [k - 1]));",
        "            }",
        "            System.out.println (n + \" \" + sum);",
        "            doubleFactorials [n] = doubleFactorials [n - 1].multiply (BigInteger.valueOf (2 * n - 1));",
        "        }",
        "    }",
        "}"
    ],
    "xref": [
        "Cf. A001147."
    ],
    "keyword": "nonn,easy",
    "offset": "1,2",
    "author": "_Felix A. Pahl_, Dec 15 2012",
    "references": 2,
    "revision": 18,
    "time": "2015-09-12T11:00:29-04:00",
    "created": "2012-12-17T00:44:46-05:00"
}