{
    "number": 175274,
    "data": "105148064265927977839670339,105148064265927977839838717,105148064265927977839990337,105148064265927977842711099,105148064265927977843159537,105148064265927977846038379",
    "name": "Base-20 pandigital primes: primes having at least one of each digit 0,...,19, when written in base 20.",
    "comment": [
        "Base-20 pandigital primes must have at least 21 base-20 digits (i.e. they are larger than 20^20 > 10^26), since sum(d_i 20^i) = sum(d_i) (mod 19), and 0+1+...+18+19 is divisible by 19. So the smallest ones should be of the form \"10123456789ABCD...\" in base 20, where \"...\" is a permutation of \"EFHGIJ\" (with A..J representing digits 10..19)."
    ],
    "link": [
        "Alonso Del Arte, <a href=\"http://oeis.org/wiki/Classifications_of_prime_numbers#By_representation_in_specific_bases\">Classifications of prime numbers - By representation in specific bases</a>, OEIS Wiki as of Mar 19 2010."
    ],
    "program": [
        "(PARI) pdp( b=20/*base*/, c=99/* # of terms to produce */) = { my(t, a=[], bp=vector(b,i,b^(b-i))~, offset=b*(b^b-1)/(b-1)); for( i=1,b-1, offset+=b^b; for( j=0,b!-1, isprime(t=offset-numtoperm(b,j)*bp) | next; #(a=concat(a,t))<c | return(vecsort(a))))} /* NOTE: Due to the implementation of numtoperm, the returned list may be incomplete towards its end. Thus computation of more than the required # of terms is recommended. [The initial digits of the base-20 expansion of the terms allow one to know up to where it is complete.] You may use a construct of the form: vecextract(pdp(20,999),\"1..20\")) */"
    ],
    "xref": [
        "Cf. A138837, A050288, A175271 - A175280."
    ],
    "keyword": "nonn,base",
    "offset": "1,1",
    "author": "_M. F. Hasler_, May 27 2010",
    "references": 4,
    "revision": 10,
    "time": "2016-01-03T10:42:12-05:00",
    "created": "2010-07-11T03:00:00-04:00"
}