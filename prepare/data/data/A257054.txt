{
    "number": 257054,
    "data": "0,1,2,3,4,5,6,7,8,9,11,22,33,44,55,66,77,88,99,111,112,121,211,222,224,242,333,336,363,422,444,448,484,555,633,666,777,844,888,999,1111,1113,1131,1311,2222,2226,2262,2622,3111,3333,3339,3393,3933,4444,5555,6222,6666,7777,8888,9333,9999,11111,11114,11141,11411",
    "name": "Numbers n such that for each decimal digit d of n, \"sum of all occurrences of d in n\" is constant.",
    "comment": [
        "For any N in the sequence, the number of decimal digits of N is a multiple of the LCM of the digits.",
        "Contains A010785 (the repdigits) as a subsequence.",
        "N cannot contain the digit d = 0 along with any other digits, since the sum of any number of zeros in the sequence would be 0, implying the sum of all other values of d in N are likewise 0. - _Michael De Vlieger_, Apr 16 2015"
    ],
    "link": [
        "Christian Perfect, <a href=\"/A257054/b257054.txt\">Table of n, a(n) for n = 1..92629</a>"
    ],
    "example": [
        "1241121 belongs to the sequence because there are four 1s (totalling 4), two 2s (totalling 4) and one 4.",
        "6666888 belongs to the sequence because there are four 6s (totalling 24) and three 8s (totalling 24)."
    ],
    "mathematica": [
        "fQ[n_] := Block[{d = DigitCount@ n, k, s}, If[d[[10]] > 0, False, Length@ (Reap@ For[k = 0, k < 10, Sow[k d[[k]]], k++] // Flatten // Rest // DeleteDuplicates) <= 2]]; Prepend[Select[Range@ 12000, fQ],0] (* _Michael De Vlieger_, Apr 15 2015 *)",
        "f[x_]:=Total[Gather[IntegerDigits[x]],{2}]; Select[Range[0,12000],Total[f[#]]/Length[f[#]]==Max[f[#]]&] (* _Ivan N. Ianakiev_, Apr 20 2015 *)"
    ],
    "program": [
        "(Python)",
        "def a():",
        "....digits = [1,2,3,4,5,6,7,8,9]",
        ".",
        "....combs = []",
        "....for n in range(1,10):",
        "........combs += list(combinations(digits,n))",
        ".",
        "....# for each choice of digits, find the smallest element of the sequence which contains those digits, as a template",
        "....templates = [''.join(str(d)*(lcm(comb)//d) for d in comb) for comb in combs]",
        "....templates.sort(key=len)",
        ".",
        "....# for each number of digits",
        "....for i in count(1):",
        "........# templates whose lengths divide i",
        "........ts = takewhile(lambda x:len(x)<=i,templates)",
        "........ts = [t for t in ts if i%len(t)==0]",
        "........# for each template, multiply it so it has i digits, then find all anagrams",
        "........its = sum(([int(''.join(x)) for x in permutations_without_duplicates(sorted(t*(i//len(t))))] for t in ts),[])",
        "........its.sort()",
        "........for n in its:",
        "............yield n"
    ],
    "keyword": "nonn,base,easy,changed",
    "offset": "1,3",
    "author": "_Christian Perfect_, Apr 15 2015",
    "references": 1,
    "revision": 24,
    "time": "2018-02-22T16:34:06-05:00",
    "created": "2015-04-20T13:23:54-04:00"
}