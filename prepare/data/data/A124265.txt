{
    "number": 124265,
    "data": "3,3,11,27,162,380,7650,17325,81340,2518992,91128240,424947600,14078156400,33300661680,424624548348",
    "name": "Variant sequence generated by solving the order n x n linear problem [H]x = b where b is the unit vector and the sequence term is given by the denominator of the last unknown xn.",
    "formula": [
        "[H] is defined by hilbertWarrenA1[i,j]:=(1+j+i)/(-1+j+i) where numbering starts at 1."
    ],
    "program": [
        "HilbertWarren(fun, order) := ( Unity[i,j] := 1, A : genmatrix(fun, order, order), B : genmatrix(Unity, 1, order), App : invert(triangularize(A)), Xp : App . B, 1/Xp[order] ); findWarrenSequenceTerms(fun, a, b) := ( L : append(), for order: a next order+1 through b do L: cons(first(HilbertWarren(fun,order)), L), S : reverse(L) ); k : 15; hilbert[i,j] := 1/(i + j - 1); findWarrenSequenceTerms(hilbert, 1, k); hilbertA0[i,j] := (i + j + 0)/(i + j - 1); /* sum 1 */ findWarrenSequenceTerms(hilbertA0, 1, k); hilbertA1[i,j] := (i + j + 1)/(i + j - 1); /* sum 2: there are lots of these, increment numerator */ findWarrenSequenceTerms(hilbertA1, 1, k); hilbertD1[i,j] := (i - j + 1)/(i + j - 1); /* difference 1 */ findWarrenSequenceTerms(hilbertD1, 1, k); hilbertP1[i,j] := (i * j + 0)/(i + j - 1); /* product 1 */ findWarrenSequenceTerms(hilbertP1, 1, k); hilbertQ1[i,j] := (i / j)/(i + j - 1); /* quotient 1 */ findWarrenSequenceTerms(hilbertQ1, 1, k);"
    ],
    "keyword": "eigen,frac,hard,nonn",
    "offset": "1,1",
    "author": "L. Van Warren (van(AT)wdv.com), Oct 23 2006",
    "references": 0,
    "revision": 2,
    "time": "2008-06-29T03:00:00-04:00",
    "created": "2006-12-06T03:00:00-05:00"
}